<Window x:Class="MetaboliteViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MetaboliteViewer"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        WindowStyle="SingleBorderWindow"
        MouseLeftButtonDown="WindowMouseLeftButtonDown"
        xmlns:gif="clr-namespace:XamlAnimatedGif;assembly=XamlAnimatedGif"
        Title="Metabolomics Viewer" Height="700" Width="1000"
            xmlns:behaviors="clr-namespace:WPFTextBoxAutoComplete;assembly=WPFTextBoxAutoComplete"
        >
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid Background="Gray">
            <Border x:Name="ImageBorder" Background="Transparent" Height="525" HorizontalAlignment="Center" VerticalAlignment="Top" Width="974" Margin="10,10,10,0">
                <ScrollViewer>
                    <Image MinHeight="300" MinWidth="300" x:Name="displayImage"/>
                </ScrollViewer>
            </Border>
            <Border Visibility="Hidden" x:Name="waitImageBorder" Background="Green" Height="525" HorizontalAlignment="Center" VerticalAlignment="Top" Width="974" Margin="0,10,0,0">
                <Image gif:AnimationBehavior.SourceUri="Data/giphy.gif" Stretch="Fill"/>
            </Border>



            <DockPanel Margin="0,540,269,31" Height="100" Width="700">
                <DockPanel DockPanel.Dock="Top" Height="50" Width="700">
                    <Label x:Name="LabelTest" DockPanel.Dock="Left" FontSize="15" Content="PathWay" HorizontalAlignment="Center" VerticalAlignment="Center" Height="30" Width="100"/>
                    <Border x:Name="TextBoxBorder" DockPanel.Dock="Right" Height="30" CornerRadius="10" Background="White" Width="600">
                        <TextBox x:Name="pathwayField" 
                         Height="30"
                         AutoWordSelection="True" 
                         TextAlignment="Center" 
                         Background="Transparent" 
                         BorderBrush="{x:Null}" 
                         behaviors:AutoCompleteBehavior.AutoCompleteItemsSource="{Binding Pathways}" 
                         behaviors:AutoCompleteBehavior.AutoCompleteStringComparison="InvariantCultureIgnoreCase"
                         
                         FontSize="18" BorderThickness="0"/>
                    </Border>
                </DockPanel>
                <DockPanel Height="50" Width="700">
                    <Border x:Name="TextBoxBorder2" DockPanel.Dock="Right" Height="30" Background="White" CornerRadius="10" Width="600" >
                        <TextBox x:Name="CompoundNameField"
                         TextAlignment="Center"
                         Height="30"
                         AutoWordSelection="True" 
                         Background="Transparent" 
                         BorderBrush="{x:Null}" 
                         behaviors:AutoCompleteBehavior.AutoCompleteItemsSource="{Binding TestItems}" 
                         behaviors:AutoCompleteBehavior.AutoCompleteStringComparison="InvariantCultureIgnoreCase"
                         
                         FontSize="18" Width="612" BorderThickness="0"/>
                    </Border>
                    <Label FontSize="15" DockPanel.Dock="Left" Content="Compound" HorizontalAlignment="Center" VerticalAlignment="Center" Height="30" Margin="0,10" Width="100"/>
                </DockPanel>
            </DockPanel>



            <Border Margin="718,540,0,0" Height="100" Width="200" >
                <Border x:Name="ButtonBorder" Height="51" CornerRadius="10" Background="Black" VerticalAlignment="Center" HorizontalAlignment="Center" Width="168" >
                    <Button x:Name="GetButton" Background="Transparent" Click="Button_Click" VerticalAlignment="Center" BorderBrush="{x:Null}" Style="{DynamicResource ButtonStyle1}">
                        <Button.Content>
                            <TextBlock FontSize="25" Foreground="White"><Bold>Search</Bold></TextBlock>
                        </Button.Content>
                    </Button>
                </Border>
            </Border>
            <CheckBox x:Name="IsMuted" Checked="IsMuted_Checked" Margin="0,0,976,653">
                
            </CheckBox>
        </Grid>
    </Grid>
</Window>
